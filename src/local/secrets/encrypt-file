#!/usr/bin/env sh

set -o errexit

script_name="$(basename "$0")"

usage() {
  cat <<HERE

Encrypt a small (less than 382 bytes) file using a provided public key file in
PEM format. This is a wrapper script around the openssl pkeyutl -encrypt
command.

Usage:
  encrypt_file -h
  encrypt_file <options> -
  encrypt_file <options> <file>

Options:
  -h        Show this help message.

  -k        A public key file in PEM format

  -o        Path to output the encrypted file

Args:
  -         Encrypt what is passed to stdin

  <file>    Encrypt the provided file

HERE
}


encrypt_file() {
  printf "%s" "$input_plaintext" | \
  openssl pkeyutl \
    -encrypt \
    -inkey "$public_pem_file" \
    -keyform "PEM" \
    -pubin \
    -pkeyopt rsa_padding_mode:oaep \
    -pkeyopt rsa_oaep_md:sha512 \
    -in "-" \
    -out "$output_ciphertext_file"
}

while getopts "hk:o:" OPTION ; do
  case "$OPTION" in
    h) usage
       exit 0 ;;
    k) public_pem_file=$OPTARG ;;
    o) output_ciphertext_file=$OPTARG ;;
    ?) usage
       exit 1 ;;
  esac
done
shift $((OPTIND - 1))
input_plaintext_file="${1:--}"
input_plaintext=""

# Need to check the length of plaintext since this key is only meant for small payloads.
# https://crypto.stackexchange.com/questions/42097/what-is-the-maximum-size-of-the-plaintext-message-for-rsa-oaep/42100#42100

if [ "$input_plaintext_file" = "-" ]; then
  IFS="" read -r input_plaintext
  input_plaintext_size="${#input_plaintext}"
  test -n "$input_plaintext" || (echo "ERROR $script_name: No content to encrypt." && exit 1)
  test -n "$input_plaintext_size" || (echo "ERROR $script_name: Failed to get size of plaintext." && exit 1)
  test "$input_plaintext_size" -le "382" || (echo "ERROR $script_name: The plaintext byte length is over the 382 byte limit allowed for the key." && exit 1)
else
  test -e "$input_plaintext_file"
  plaintext_filesize="$(stat -c '%s' "$input_plaintext_file")"
  test -n "$plaintext_filesize" || (echo "ERROR $script_name: Failed to get size of plaintext file." && exit 1)
  test "$plaintext_filesize" -le "382" || (echo "ERROR $script_name: The plaintext byte length is over the 382 byte limit allowed for the key." && exit 1)
  input_plaintext="$(cat "$input_plaintext_file")"
fi

if [ ! -e "$public_pem_file" ]; then
  echo "ERROR $script_name: The public key doesn't exist. $public_pem_file"
  exit 4
fi

encrypt_file
